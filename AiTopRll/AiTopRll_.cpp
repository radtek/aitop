// AiTopRll_TFUNC_.c created by MKNTRLL Sat May 10 14:08:05 2008
#include "stdafx.h"
// **********
// DO NOT EDIT THIS FILE!
// (It will be overwritten the next
// time you run MKNTRLL).
// ****[Made By JackyBoy]********

#include <windows.h>
#include "ntrll.h"

static char *VOSfuncName[] =
	{
	"cksent",
	"getpid",
	"suspend",
	"suspterm",
	"wakeup",
	"hangup",
	"voslog",
	"vid_write",
	"deventf",
	"ueventf",
	"hangup_t",
	"dtasknotify",
	"settaskvar",
	"gettaskvar",
	};

#define NrVosFuncs (sizeof(VOSfuncName)/sizeof(VOSfuncName[0]))

FARPROC fpVOSfunc_[NrVosFuncs];

static void NotImplemented()
	{
	MessageBox(NULL, "RLL needs newer version of VOS", "VOS RLL",
	  MB_ICONSTOP | MB_OK);
	return;
	}
static HINSTANCE hVOSDLL;
static LPSTR pszVersion = __TIME__;

static FUNCINFO FuncInfo[] = 
	{
	ENTRY_FUNC, "vosStart", (FARPROC) 0x6469,
	EXIT_FUNC, "vosExit", (FARPROC) 0xe0f4,
	1, "ai_isBlackList", (FARPROC) 0xc783,
	1, "ai_getProvince", (FARPROC) 0x53b4,
	3, "ai_strReplace", (FARPROC) 0xfe43,
	1, "ai_openDatabase", (FARPROC) 0x9df5,
	1, "ai_execSqlA", (FARPROC) 0x2b43,
	1, "ai_execSqlB", (FARPROC) 0x2c44,
	5, "ai_dblog", (FARPROC) 0x3434,
	6, "ai_tflog", (FARPROC) 0x9448,
	1, "ai_getUserLevel", (FARPROC) 0xce06,
	2, "ai_getUserPassword", (FARPROC) 0xdc62,
	7, "ai_SendSms", (FARPROC) 0x27e9,
	0, "ai_LockWorkStation", (FARPROC) 0x353e,
	0, "ln_getFreeLine", (FARPROC) 0xdf88,
	1, "ln_getLineInfo", (FARPROC) 0x492,
	1, "ln_init", (FARPROC) 0xa2ef,
	1, "ln_init_all", (FARPROC) 0x4989,
	1, "ln_use", (FARPROC) 0xdc88,
	6, "ln_on", (FARPROC) 0x4318,
	2, "ln_checkOnlineCaller", (FARPROC) 0xa3f6,
	2, "ln_checkOnlineCallee", (FARPROC) 0x96e9,
	0, "db_init", (FARPROC) 0x22db,
	1, "db_chkTimeOut", (FARPROC) 0x8427,
	1, "db_getMenuType", (FARPROC) 0x8aa1,
	1, "db_getMenuKeyList", (FARPROC) 0x18c5,
	2, "db_getMenuString", (FARPROC) 0x777,
	2, "db_getTopInfo", (FARPROC) 0xd629,
	2, "db_getTopInfoVoc", (FARPROC) 0x9752,
	3, "db_getTopList", (FARPROC) 0xf239,
	};

DLLEXPORT DWORD RLLInfo(LPSTR pszVOSDLL, LPWORD lpNrFuncs,
  LPFUNCINFO *lpFuncInfo, LPSTR pszVer)
	{
	int i;
	*lpNrFuncs = 30;
	*lpFuncInfo = FuncInfo;
	strncpy(pszVer, pszVersion, 13);
	pszVer[13] = 0;

	if(!pszVOSDLL)
		return 0;

	hVOSDLL = LoadLibrary(pszVOSDLL);
	if(hVOSDLL == NULL)
		return 2;

	for (i = 0; i < NrVosFuncs; i++)
		{
		fpVOSfunc_[i] = GetProcAddress(hVOSDLL, VOSfuncName[i]);
		if(fpVOSfunc_[i] == NULL)
			fpVOSfunc_[i] = (FARPROC) NotImplemented;
		}

	return 0;
	}
