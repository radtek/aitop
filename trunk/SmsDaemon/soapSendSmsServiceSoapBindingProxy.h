/* soapSendSmsServiceSoapBindingProxy.h
   Generated by gSOAP 2.7.10 from aitop3.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapSendSmsServiceSoapBindingProxy_H
#define soapSendSmsServiceSoapBindingProxy_H
#include "soapH.h"
class SendSmsServiceSoapBinding
{   public:
	/// Runtime engine context allocated in constructor
	struct soap *soap;
	/// Endpoint URL of service 'SendSmsServiceSoapBinding' (change as needed)
	const char *endpoint;
	/// Constructor allocates soap engine context, sets default endpoint URL, and sets namespace mapping table
	SendSmsServiceSoapBinding()
	{ soap = soap_new(); endpoint = "http://220.194.56.196:9058/calldownsms/services/SendSmsService"; if (soap && !soap->namespaces) { static const struct Namespace namespaces[] = 
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://service.asiainfo.com", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap->namespaces = namespaces; } };
	/// Destructor frees deserialized data and soap engine context
	virtual ~SendSmsServiceSoapBinding() { if (soap) { soap_destroy(soap); soap_end(soap); soap_free(soap); } };
	/// Invoke 'send' of service 'SendSmsServiceSoapBinding' and return error code (or SOAP_OK)
	virtual int ns1__send(int _cp_USCOREid, int _serviceid, char *_usernumber, int _timelen, char *_content, int &_sendReturn) { return soap ? soap_call_ns1__send(soap, endpoint, NULL, _cp_USCOREid, _serviceid, _usernumber, _timelen, _content, _sendReturn) : SOAP_EOM; };
	/// Invoke 'send' of service 'SendSmsServiceSoapBinding' and return error code (or SOAP_OK)
	virtual int ns1__send_(int _cp_USCOREid, int _serviceid, char *_usernumber, int _timelen, char *_content, int &_sendReturn) { return soap ? soap_call_ns1__send_(soap, endpoint, NULL, _cp_USCOREid, _serviceid, _usernumber, _timelen, _content, _sendReturn) : SOAP_EOM; };
	/// Invoke '' of service 'SendSmsServiceSoapBinding' and return error code (or SOAP_OK)
	virtual int ns1__send__(int _cp_USCOREid, int _serviceid, char *_usernumber, int _timelen, char *_content, int &_sendReturn) { return soap ? soap_call_ns1__send__(soap, endpoint, NULL, _cp_USCOREid, _serviceid, _usernumber, _timelen, _content, _sendReturn) : SOAP_EOM; };
	/// Invoke 'sendFailed' of service 'SendSmsServiceSoapBinding' and return error code (or SOAP_OK)
	virtual int ns1__sendFailed(int _cp_USCOREid, int _serviceid, char *_usernumber, char *_content, int &_sendFailedReturn) { return soap ? soap_call_ns1__sendFailed(soap, endpoint, NULL, _cp_USCOREid, _serviceid, _usernumber, _content, _sendFailedReturn) : SOAP_EOM; };
	/// Invoke 'sendnote' of service 'SendSmsServiceSoapBinding' and return error code (or SOAP_OK)
	virtual int ns1__sendnote(int _spID, int _serviceID, char *_userNumber, int _rank, int &_sendnoteReturn) { return soap ? soap_call_ns1__sendnote(soap, endpoint, NULL, _spID, _serviceID, _userNumber, _rank, _sendnoteReturn) : SOAP_EOM; };
};
#endif
